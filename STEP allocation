## correct the string file

create table `cp-gsso-prod-gtnanalytics.PRIMARY_DATA.tbl_STEP_ver2` as
SELECT 
SAFE_CAST (Month as int64) as Month,
SAFE_CAST ( Year as int64) as Year,
SAFE_CAST (StockistCodey as int64) as stockist_code,
nullif (OtherPayoutCondonationValue1,0) as Condonation_Value, 
Payout1, 
IfBrandSpecific as BrandSpecific, BrandName,
OverallSTT, OverallToothpaste, 
PPGCode, PPGDesc, PPGSpecific,
REType, REspecific,
Parameter,
FROM `cp-gsso-prod-gtnanalytics.PRIMARY_DATA.tbl_STEP` ## this file is not required

## this is the base file for STEP allocation (subset of gt2)
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_base as
select CONDITION_VALUE, customer, year2, month2, PPG_code, RE, brand,  DOCUMENT_NUNBER, Std_Material_ID,
cast (stockist_CAP_code as int64) as stockist_code
FROM cp-gsso-prod-gtnanalytics.PRIMARY_DATA.collated_GT2

## Parameter -1
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_Parameter1 as
select distinct Month, Year, Stockist_Code, State, 

Overall_STT_Yes_No1, Overall_Toothpaste_Yes_No1, 
Brand_Specific_Yes_No1, Brand_Name1, PPG_Specific_Yes_No1, 
PPG_Code1, PPG_Desc1, RE_specific_Yes_No1, RE_Type1, 

Parameter1_Payout,
Condonation_Value
from
cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_DF

## parameter -2
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_Parameter2 as
select distinct Month, Year, Stockist_Code, State, 

Overall_STT_Yes_No2, Overall_Toothpaste_Yes_No2, 
Brand_Specific_Yes_No2, Brand_Name2, PPG_Specific_Yes_No2, 
PPG_Code2, PPG_Desc2, RE_specific_Yes_No2, RE_Type2, 

Parameter2_Payout,
Condonation_Value
from
cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_DF

## Parameter -3
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_Parameter3 as
select distinct Month, Year, Stockist_Code, State, 

Parameter3_Desc, Overall_STT_Yes_No3, Overall_Toothpaste_Yes_No3, 
Brand_Specific_Yes_No3, Brand_Name3, PPG_Specific_Yes_No3, 
PPG_Code3, PPG_Desc3, RE_specific_Yes_No3, RE_Type3,

Parameter3_Payout ,
Condonation_Value
from
cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_DF


## parameter -4

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_Parameter4 as
select distinct Month, Year, Stockist_Code, State, 
Parameter4_Desc, Overall_STT_Yes_No4, Overall_Toothpaste_Yes_No4, 
Brand_Specific_Yes_No4, Brand_Name4, PPG_Specific_Yes_No4, 
PPG_Code4, PPG_Desc4, RE_specific_Yes_No4, RE_Type4,
Parameter4_Payout,
Condonation_Value
from
cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_DF


-------------------------parameter -1 ----------------------------------------------------
## base file for parameter-1
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1 as
select 
a.Overall_STT_Yes_No1,	a.Overall_Toothpaste_Yes_No1	,
a.Brand_Specific_Yes_No1	,a.Brand_Name1	,a.PPG_Specific_Yes_No1	,
a.PPG_Code1, a.PPG_Desc1	,a.RE_specific_Yes_No1	,a.RE_Type1	,a.Parameter1_Payout,a. Condonation_Value,
b.*
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter1_update a
right join cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_base b
on a.Stockist_Code=b.stockist_code and a.month=b.month2 and a.year=b.year2

## take this at overall level

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_1_overall as 
select stockist_code,
year2, month2,
round(avg(Parameter1_Payout),0) as Overall_Parameter1_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P1,
round(sum(CONDITION_VALUE),0) as Overall_ASP 
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1
where Overall_STT_Yes_No1=true
group by stockist_code,year2,month2
order by stockist_code,year2,month2

## take this at brand level
## get the right data for brand

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_brand_df as
select year2, month2,Parameter1_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, 
Brand_Name1,Brand_Specific_Yes_No1,RE_specific_Yes_No1
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1
where Brand_Specific_Yes_No1=true 

## correcting the brand data 

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_brand_df_corr as
(select 
year2, month2,Parameter1_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, UPPER(TRIM(Brand_Name)) AS Brand_Name1,
FROM (select 
year2, month2,Parameter1_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, SPLIT (Brand_Name1,',') AS Brand_Name2,
FROM cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_brand_df ) A
cross join unnest (Brand_Name2) as Brand_Name)

## brand level allocation 
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_1_brand as 
select stockist_code,
year2, month2,
round(avg(Parameter1_Payout),0) as Overall_Parameter1_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P1,
round(sum(CONDITION_VALUE),0) as Overall_ASP ,Brand_Name1
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_brand_df_corr
group by stockist_code,year2,month2,Brand_Name1
order by stockist_code,year2,month2,Brand_Name1

## correcting the brand allocation
delete from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_1_brand where Stockist_Code in (16179730,16325989,16327259)


## there is no combination with (Brand & RE) and (Brand & PPG) 1 record but no amt to allocate

## get the right data for PPG 

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_PPG_df as
select year2, month2,Parameter1_Payout,Condonation_Value,CONDITION_VALUE,stockist_code,PPG_Code1
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1
where PPG_Specific_Yes_No1=true

## correcting the PPG data

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_PPG_df_corr as
(select 
year2, month2,Parameter1_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, UPPER(TRIM(PPG_Code)) AS PPG_Code1,
FROM (select 
year2, month2,Parameter1_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, SPLIT (PPG_Code1,',') AS PPG_Code2,
FROM cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_PPG_df ) A
cross join unnest (PPG_Code2) as PPG_Code)

## allocation at p1-PPG level

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_PPG_df_allo as 
select stockist_code,
year2, month2,
round(avg(Parameter1_Payout),0) as Overall_Parameter1_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P1,
round(sum(CONDITION_VALUE),0) as Overall_ASP ,PPG_Code1
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_PPG_df_corr
group by stockist_code,year2,month2,PPG_Code1
order by stockist_code,year2,month2,PPG_Code1

## get the right data for RE allocation

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_RE_df as
select year2, month2,Parameter1_Payout,Condonation_Value,CONDITION_VALUE,stockist_code,RE_Type1
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1
where RE_specific_Yes_No1=true

##correcting the RE data
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_RE_df_corr as
(select 
year2, month2,Parameter1_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, UPPER(TRIM(RE_Type)) AS RE_Type1,
FROM (select 
year2, month2,Parameter1_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, SPLIT (RE_Type1,',') AS RE_Type2,
FROM cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_RE_df ) A
cross join unnest (RE_Type2) as RE_Type)

## allocation at RE level

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_RE_df_allo as 
select stockist_code,
year2, month2,
round(avg(Parameter1_Payout),0) as Overall_Parameter1_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P1,
round(sum(CONDITION_VALUE),0) as Overall_ASP ,RE_Type1
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_1_RE_df_corr
group by stockist_code,year2,month2,RE_Type1
order by stockist_code,year2,month2,RE_Type1


------------------------------------------------------------------parameter 2----------------------------------------------------------

## base file for parameter-2
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2 as
select 
A.Overall_STT_Yes_No2,
A.Brand_Specific_Yes_No2, A.Brand_Name2, A.PPG_Specific_Yes_No2, 
A.PPG_Code2, A.RE_specific_Yes_No2, A.RE_Type2, A.Parameter2_Payout,A.Condonation_Value,
b.*
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter2_update a
right join cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_base b
on a.Stockist_Code=b.stockist_code and a.month=b.month2 and a.year=b.year2


## to take this at overall level

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_2_overall as 
select stockist_code,
year2, month2,
round(avg(Parameter2_Payout),0) as Overall_Parameter2_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P2,
round(sum(CONDITION_VALUE),0) as Overall_ASP 
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2
where Overall_STT_Yes_No2=true
group by stockist_code,year2,month2
order by stockist_code,year2,month2


## identify the right data for brand
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_brand_df as
select year2, month2,Parameter2_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, Brand_Name2,
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2
where Brand_Specific_Yes_No2=true

## CORRECTING the brand data

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_brand_df_corr as
(select 
year2, month2,Parameter2_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, UPPER(TRIM(Brand_Name2)) AS Brand_Name2,
FROM (select 
year2, month2,Parameter2_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, SPLIT (Brand_Name2,',') AS Brand_Name2,
FROM cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_brand_df) A
cross join unnest (Brand_Name2) as Brand_Name2)

DELETE cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_brand_df_corr where Brand_Name2='NA'


## allocation of brand data
## brand level allocation 
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_2_brand as 
select stockist_code,
year2, month2,
round(avg(Parameter2_Payout),0) as Overall_Parameter2_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P2,
round(sum(CONDITION_VALUE),0) as Overall_ASP ,Brand_Name2
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_brand_df_corr
group by stockist_code,year2,month2,Brand_Name2
order by stockist_code,year2,month2,Brand_Name2

## get right data for PPG

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_PPG_df as
select year2, month2,Parameter2_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, PPG_Code2,
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2
where PPG_Specific_Yes_No2=true

## correct the PPG data

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_PPG_df_corr as
(select 
year2, month2,Parameter2_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, UPPER(TRIM(PPG_Code2)) AS PPG_Code2,
FROM (select 
year2, month2,Parameter2_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, SPLIT (PPG_Code2,',') AS PPG_Code2,
FROM cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_PPG_df) A
cross join unnest (PPG_Code2) as PPG_Code2)

## allocate the PPG
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_2_PPG as 
select stockist_code,
year2, month2,
round(avg(Parameter2_Payout),0) as Overall_Parameter2_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P2,
round(sum(CONDITION_VALUE),0) as Overall_ASP ,PPG_Code2
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_PPG_df_corr
group by stockist_code,year2,month2,PPG_Code2
order by stockist_code,year2,month2,PPG_Code2

## get the right data for RE
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_RE_df as
select year2, month2,Parameter2_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, RE_Type2,
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2
where RE_specific_Yes_No2=true

## data correction for RE

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_RE_df_corr as
(select 
year2, month2,Parameter2_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, UPPER(TRIM(RE_Type2)) AS RE_Type2,
FROM (select 
year2, month2,Parameter2_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, SPLIT (RE_Type2,',') AS RE_Type2,
FROM cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_RE_df) A
cross join unnest (RE_Type2) as RE_Type2)

## allocation of the RE
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_2_RE as 
select stockist_code,
year2, month2,
round(avg(Parameter2_Payout),0) as Overall_Parameter2_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P2,
round(sum(CONDITION_VALUE),0) as Overall_ASP ,RE_Type2
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_2_RE_df_corr
group by stockist_code,year2,month2,RE_Type2
order by stockist_code,year2,month2,RE_Type2


------------------------------------------------------PARAMETER-3 -----------------------------------------------------------

## base file for parameter-2
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3 as select 
A.Overall_STT_Yes_No3,A.Brand_Specific_Yes_No3, A.Brand_Name3, A.PPG_Specific_Yes_No3, 
A.PPG_Code3, A.RE_specific_Yes_No3, A.RE_Type3, A.Parameter3_Payout,A.Condonation_Value,b.*
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter3_update a
right join cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_base b on a.Stockist_Code=b.stockist_code and a.month=b.month2 and a.year=b.year2

## to take this at overall level

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_3_overall as 
select stockist_code,
year2, month2,
round(avg(Parameter3_Payout),0) as Overall_Parameter3_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P3,
round(sum(CONDITION_VALUE),0) as Overall_ASP 
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3
where Overall_STT_Yes_No3=true
group by stockist_code,year2,month2
order by stockist_code,year2,month2

## get right data for the brand

## identify the right data for brand
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_brand_df as
select year2, month2,Parameter3_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, Brand_Name3,
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3
where Brand_Specific_Yes_No3=true

## CORRECTING the brand data

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_brand_df_corr as
(select 
year2, month2,Parameter3_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, UPPER(TRIM(Brand_Name3)) AS Brand_Name3,
FROM (select 
year2, month2,Parameter3_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, SPLIT (Brand_Name3,',') AS Brand_Name3,
FROM cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_brand_df) A
cross join unnest (Brand_Name3) as Brand_Name3)


## allocation of brand data
## brand level allocation 
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_3_brand as 
select stockist_code,
year2, month2,
round(avg(Parameter3_Payout),0) as Overall_Parameter3_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P3,
round(sum(CONDITION_VALUE),0) as Overall_ASP ,Brand_Name3
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_brand_df_corr
group by stockist_code,year2,month2,Brand_Name3
order by stockist_code,year2,month2,Brand_Name3

## brand name correction 
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_3_brand2 as
select a.string_field_1 as Brand_Name_3,
b.*
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.BRAND_CORRECTION_27 a
right join cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_3_brand b
on b.Brand_Name3=a.string_field_0

## get right data for PPG mapping 

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_PPG_df as
select year2, month2,Parameter3_Payout,
Condonation_Value,CONDITION_VALUE,stockist_code, PPG_Code3,
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3
where PPG_Specific_Yes_No3=true

## correct the PPG data

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_PPG_df_corr as
(select 
year2, month2,Parameter3_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, UPPER(TRIM(PPG_Code3)) AS PPG_Code3,
FROM (select 
year2, month2,Parameter3_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, SPLIT (PPG_Code3,',') AS PPG_Code3,
FROM cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_PPG_df) A
cross join unnest (PPG_Code3) as PPG_Code3)

## allocate the PPG
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_3_PPG as 
select stockist_code,
year2, month2,
round(avg(Parameter3_Payout),0) as Overall_Parameter3_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P3,
round(sum(CONDITION_VALUE),0) as Overall_ASP ,PPG_Code3
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_PPG_df_corr
group by stockist_code,year2,month2,PPG_Code3
order by stockist_code,year2,month2,PPG_Code3

## get the right data for RE


create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_RE_df1 as
select year2, month2,Parameter3_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, RE_Type3,PPG_Specific_Yes_No3,PPG_Code3
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3
where RE_specific_Yes_No3='Yes' 

## data correction for RE

create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_RE_df_corr1 as
select 
year2, month2,Parameter3_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, UPPER(TRIM(RE_Type3)) AS RE_Type3,PPG_Specific_Yes_No3
FROM (select 
year2, month2,Parameter3_Payout,Condonation_Value,CONDITION_VALUE,stockist_code, SPLIT (RE_Type3,',') AS RE_Type3,PPG_Specific_Yes_No3,
FROM cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_RE_df1
where PPG_Specific_Yes_No3=false) A
cross join unnest (RE_Type3) as RE_Type3



## allocation of the RE
create table cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_para_3_RE as 
select stockist_code,
year2, month2,
round(avg(Parameter3_Payout),0) as Overall_Parameter3_Payout,
round(avg(Condonation_Value),0) as overall_Condonation_P3,
round(sum(CONDITION_VALUE),0) as Overall_ASP ,RE_Type3
from cp-gsso-prod-gtnanalytics.PRIMARY_DATA.STEP_parameter_3_RE_df_corr1
group by stockist_code,year2,month2,RE_Type3
order by stockist_code,year2,month2,RE_Type3




























